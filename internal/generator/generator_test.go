package generator_test

import (
	"github.com/stretchr/testify/require"
	"io/ioutil"
	"os"
	"strings"
	"testing"

	"github.com/stretchr/testify/assert"

	"github.com/thepwagner/magenny/internal/generator"
	"github.com/thepwagner/magenny/internal/test"
)

func TestNewGenerator(t *testing.T) {
	gen := NewTestGenerator(t)
	assert.NotNil(t, gen)
}

func NewTestGenerator(t *testing.T) *generator.Generator {
	return generator.NewGenerator(
		test.LoadTestSchema(t, test.StarWars),
		test.SetupOutputDir(t, test.StarWars),
	)
}

func TestGenerator_NewFile(t *testing.T) {
	dir, err := ioutil.TempDir("", "gqltest")
	require.NoError(t, err)
	defer os.RemoveAll(dir)

	gen := generator.NewGenerator(test.LoadTestSchema(t, test.StarWars), dir)

	f, err := gen.NewFile("TestType")
	require.NoError(t, err)
	require.NoError(t, f.Close())

	// Verify file was created and header written:
	header, err := ioutil.ReadFile(f.Name())
	require.NoError(t, err)
	assert.True(t, strings.HasPrefix(string(header), `// Code generated by graphql-gen-go. DO NOT EDIT.
package `))
}
